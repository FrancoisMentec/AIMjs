(function(){var AIM=function(){var AIM={};AIM.test="hello world";AIM.equals=function(var1,var2){var equals=typeof var1===typeof var2;if(equals){if(typeof var1==="object"){var equals=true;for(var i in var1){if(!this.equals(var1[i],var2[i])){equals=false;break}}}else{equals=var1===var2}}return equals};AIM.clone=function(obj){var clone=null;if(typeof obj==="object"){if(Array.isArray(obj)){clone=[];var i=0;for(var i=0;i<obj.length;i++){clone[i]=this.clone(obj[i])}}else{clone={};for(var p in obj){clone[p]=this.clone(obj[p])}}}else{clone=obj}return clone};AIM.toString=function(obj,depth){depth=typeof depth==="undefined"?0:depth;var str="";if(typeof obj==="object"){if(Array.isArray(obj)){str+="[";for(var i=0;i<obj.length;i++){if(i>0)str+=", ";str+=this.toString(obj[i])}str+="]"}else{str+="{";var first=true;for(var i in obj){if(first){first=false}else{str+=","}str+=i+": "+this.toString(obj[i],depth+1)}str+="}"}}else if(typeof obj==="function"){str+="function (...) { ... }"}else if(typeof obj==="string"){str+="'"+obj+"'"}else{str+=obj}return str};AIM.indexOfState=function(state,array){var index=-1;for(var i=0;i<array.length;i++){if(state.equals(array[i])){index=i;break}}return index};AIM.stateArrayToHTML=function(array,title){var html="<div class='state-array'><div class='state-array-title'>"+title+"</div><div class='state-array-content'>";if(array.length==0){html+="empty"}else{for(var i in array){html+="<div class='state'>"+array[i].toHTML()+"</div>"}}html+="</div></div>";return html};AIM.AI=function(config){if(typeof config!=="object")throw new Error("config is undefined or not of type object");var ai={};if(typeof config.initState==="undefined")throw new Error("config.initState is undefined");ai.initState=AIM.State(ai,config.initState);if(typeof config.finalState==="undefined")throw new Error("config.finalState is undefined");ai.finalState=config.finalState;if(typeof config.getSuccessors!=="function")throw new Error("config.getSuccessors is not a function");ai.getSuccessors=config.getSuccessors;ai.equals=typeof config.equals==="function"?config.equals:null;ai._stateToHTML=typeof config.toHTML==="function"?config.toHTML:null;ai.heuristic=typeof config.heuristic==="function"?config.heuristic:null;ai.isFinal=function(state){if(typeof ai.finalState==="function"){return ai.finalState(state.struct)}return ai.areEquals(state.struct,ai.finalState)};ai.areEquals=function(state1,state2){return ai.equals==null?AIM.equals(state1,state2):ai.equals(state1,state2)};ai.h=function(state){if(ai.heuristic==null){throw new Error("No heuristic specified")}return ai.heuristic(state.struct)};ai.stateToHTML=function(state){return ai._stateToHTML!=null?ai._stateToHTML(state):AIM.toString(state.struct)};ai.execute=function(algorithm,maxDepth){var result=null;if(algorithm==="breadth-first"){result=ai.breadthFirst(maxDepth)}else if(algorithm==="depth-first"){result=ai.depthFirst(maxDepth)}else if(algorithm==="A*"){result=ai.aStar(maxDepth)}else if(typeof algorithm==="undefined"){throw new Error("No algorithm specified")}else{throw new Error("Unknown algorithm "+algorithm+" check documentation to know implemented algorithms")}return result};ai.breadthFirst=function(maxDepth){var start=(new Date).getTime();var open=[ai.initState];var close=[];var success=false;var turn=0;while(open.length>0&&!success){turn++;var state=open[0];if(state.isFinal()){success=true}else if(typeof maxDepth==="undefined"||state.depth<maxDepth){var successors=state.getSuccessors();close.push(open.shift());for(var s in successors){var successor=successors[s];if(AIM.indexOfState(successor,open)===-1&&AIM.indexOfState(successor,close)===-1){open.push(successor)}}}else{close.push(open.shift())}}var time=(new Date).getTime()-start;return AIM.Result(success,"breadth-first",time,turn,open[0],open,close)};ai.depthFirst=function(maxDepth){var start=(new Date).getTime();var open=[ai.initState];var close=[];var success=false;var turn=0;while(open.length>0&&!success){turn++;var state=open[open.length-1];if(state.isFinal()){success=true}else if(typeof maxDepth==="undefined"||state.depth<maxDepth){var successors=state.getSuccessors();close.push(open.pop());for(var s in successors){var successor=successors[s];var indexInOpen=AIM.indexOfState(successor,open);var indexInClose=AIM.indexOfState(successor,close);if(indexInOpen===-1&&(indexInClose===-1||successor.depth<close[indexInClose].depth)){open.push(successor)}else if(indexInOpen!==-1&&successor.depth<open[indexInOpen].depth){open[indexInOpen].father=state}}}else{open.pop()}}var time=(new Date).getTime()-start;return AIM.Result(success,"depth-first",time,turn,open[open.length-1],open,close)};ai.aStar=function(maxDepth){if(ai.heuristic==null)throw new Error("An heuristic is needed for A*");var start=(new Date).getTime();var open=[ai.initState];var close=[];var success=false;var turn=0;var solution=null;while(open.length>0&&!success){turn++;var index=-1;var state=null;for(var i=0;i<open.length;i++){if(state==null||open[i].f<state.f){index=i;state=open[i]}}if(state.isFinal()){success=true;solution=state}else if(typeof maxDepth==="undefined"||state.depth<maxDepth){var successors=state.getSuccessors();close.push(open.splice(index,1)[0]);for(var s in successors){var successor=successors[s];var indexInOpen=AIM.indexOfState(successor,open);var indexInClose=AIM.indexOfState(successor,close);if(indexInOpen===-1&&(indexInClose===-1||successor.depth<close[indexInClose].depth)){open.push(successor)}else if(indexInOpen!==-1&&successor.depth<open[indexInOpen].depth){open[indexInOpen].father=state}}}else{open.splice(index,1)}}var time=(new Date).getTime()-start;return AIM.Result(success,"A*",time,turn,solution,open,close)};return ai};AIM.State=function(ai,struct,father){var state={};state.ai=ai;state.struct=struct;state._father=null;state.depth=0;state._h=null;Object.defineProperty(state,"father",{set:function(father){state._father=father;state.depth=father!=null?father.depth+1:0},get:function(){return state._father}});state.father=typeof father==="undefined"?null:father;Object.defineProperty(state,"h",{get:function(){if(state._h==null){state._h=state.ai.h(state)}return state._h}});Object.defineProperty(state,"f",{get:function(){return state.depth+state.h}});state.toHTML=function(){return state.ai.stateToHTML(state)};state.isFinal=function(){return state.ai.isFinal(state)};state.getSuccessors=function(){var successorsStruct=state.ai.getSuccessors(state.struct);var successors=[];for(var s in successorsStruct){successors.push(AIM.State(state.ai,successorsStruct[s],state))}return successors};state.equals=function(stateToComp){return state.ai.areEquals(state.struct,stateToComp.struct)};return state};AIM.Result=function(success,algorithm,time,turn,solution,open,close){var result={};result.success=success;result.algorithm=algorithm;result.time=time;result.turn=turn;result.solution=solution;result.open=open;result.close=close;result.resolution=[];if(result.success){var state=result.solution;while(state!=null){result.resolution.unshift(state);state=state.father}result.depth=result.solution.depth}else{result.depth=0;for(var i=0;i<result.open.length;i++){if(result.open[i].depth>result.depth)result.depth=result.open[i].depth}for(var i=0;i<result.close.length;i++){if(result.close[i].depth>result.depth)result.depth=result.close[i].depth}}result.print=function(printArrays){printArrays=typeof printArrays==="undefined"?false:printArrays;var str=result.success?"Success":"Failure";str+=" with algorithm "+result.algorithm+" in "+result.time+" ms after "+result.turn+" turns at depth "+result.depth;console.log(str);if(printArrays){if(result.success){console.log("Resolution : ");console.log(result.resolution)}console.log("Opened states :");console.log(result.open);console.log("Closed states :");console.log(result.close)}};result.html=function(toHTML,open,close){open=typeof open==="undefined"?false:open;close=typeof close==="undefined"?false:close;var html="<div class='result-success-value ";html+=result.success?"success'>Success":"failure'>Failure";html+="</div>";html+="<div class='result-info'><div class='result-info-name'>Algorithm :</div> "+result.algorithm+"</div>";html+="<div class='result-info'><div class='result-info-name'>Turns :</div> "+result.turn+"</div>";html+="<div class='result-info'><div class='result-info-name'>Depth :</div> "+result.depth+"</div>";if(result.success){html+=AIM.stateArrayToHTML(result.resolution,"Resolution")}if(open){html+=AIM.stateArrayToHTML(result.open,"Opened states")}if(close){html+=AIM.stateArrayToHTML(result.close,"Closed states")}return html};result.drawTree=function(container){if(typeof Treant!=="function")throw new Error("Treant.js is required to draw tree (Trean.js require raphael.js)");var treeConfig={chart:{container:container},nodeStructure:null};for(var i=0;i<result.close.length;i++){result.close[i].node={innerHTML:result.close[i].toHTML(),children:[]}}for(var i=0;i<result.open.length;i++){result.open[i].node={innerHTML:result.open[i].toHTML(),children:[]}}for(var i=0;i<result.close.length;i++){if(result.close[i].father!=null){result.close[i].father.node.children.push(result.close[i].node)}else{treeConfig.nodeStructure=result.close[i].node}}for(var i=0;i<result.open.length;i++){if(result.open[i].father!=null){result.open[i].father.node.children.push(result.open[i].node)}else{treeConfig.nodeStructure=result.open[i].node}}new Treant(treeConfig)};return result};return AIM}();if(typeof module!=="undefined"&&typeof module.exports!=="undefined"){module.exports=AIM}else if(typeof define==="function"&&define.amd){define([],function(){return AIM})}else{window.AIM=AIM}})();